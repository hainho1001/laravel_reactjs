{"ast":null,"code":"const Storage = cartItems => {\n  localStorage.setItem('cart', JSON.stringify(cartItems.length > 0 ? cartItems : []));\n};\n\n_c = Storage;\nexport const sumItems = cartItems => {\n  Storage(cartItems);\n  let itemCount = cartItems.reduce((total, product) => total + product.quantity, 0);\n  let total = cartItems.reduce((total, product) => total + product.price * product.quantity, 0).toFixed(2);\n  return {\n    itemCount,\n    total\n  };\n};\nexport const CartReducer = (state, action) => {\n  switch (action.type) {\n    case \"INCREASE\":\n      state.cartItems[state.cartItems.findIndex(item => item.name === action.payload.name)].quantity++;\n      return { ...state,\n        ...sumItems(state.cartItems),\n        cartItems: [...state.cartItems]\n      };\n\n    default:\n      break;\n  }\n};\n_c2 = CartReducer;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Storage\");\n$RefreshReg$(_c2, \"CartReducer\");","map":{"version":3,"sources":["/home/vohai/Templates/self-tranning/self-training-cart/src/contexts/CartReducer.ts"],"names":["Storage","cartItems","localStorage","setItem","JSON","stringify","length","sumItems","itemCount","reduce","total","product","quantity","price","toFixed","CartReducer","state","action","type","findIndex","item","name","payload"],"mappings":"AAGA,MAAMA,OAAO,GAAIC,SAAD,IAAoB;AAChCC,EAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAeJ,SAAS,CAACK,MAAV,GAAmB,CAAnB,GAAuBL,SAAvB,GAAkC,EAAjD,CAA7B;AACH,CAFD;;KAAMD,O;AAIN,OAAO,MAAMO,QAAQ,GAAIN,SAAD,IAAoB;AACxCD,EAAAA,OAAO,CAACC,SAAD,CAAP;AACA,MAAIO,SAAS,GAAGP,SAAS,CAACQ,MAAV,CAAiB,CAACC,KAAD,EAAYC,OAAZ,KAA4BD,KAAK,GAAGC,OAAO,CAACC,QAA7D,EAAuE,CAAvE,CAAhB;AACA,MAAIF,KAAK,GAAGT,SAAS,CAACQ,MAAV,CAAiB,CAACC,KAAD,EAAYC,OAAZ,KAA4BD,KAAK,GAAGC,OAAO,CAACE,KAAR,GAAgBF,OAAO,CAACC,QAA7E,EAAuF,CAAvF,EAA0FE,OAA1F,CAAkG,CAAlG,CAAZ;AACA,SAAO;AAAEN,IAAAA,SAAF;AAAaE,IAAAA;AAAb,GAAP;AACH,CALM;AAOP,OAAO,MAAMK,WAAW,GAAG,CAACC,KAAD,EAAaC,MAAb,KAA6B;AACpD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,UAAL;AACIF,MAAAA,KAAK,CAACf,SAAN,CAAgBe,KAAK,CAACf,SAAN,CAAgBkB,SAAhB,CAA2BC,IAAD,IAAeA,IAAI,CAACC,IAAL,KAAcJ,MAAM,CAACK,OAAP,CAAeD,IAAtE,CAAhB,EAA6FT,QAA7F;AACA,aAAO,EACH,GAAGI,KADA;AAEH,WAAGT,QAAQ,CAACS,KAAK,CAACf,SAAP,CAFR;AAGHA,QAAAA,SAAS,EAAE,CAAC,GAAGe,KAAK,CAACf,SAAV;AAHR,OAAP;;AAKJ;AACI;AATR;AAWH,CAZM;MAAMc,W","sourcesContent":["\n\n\nconst Storage = (cartItems: any) => {\n    localStorage.setItem('cart', JSON.stringify(cartItems.length > 0 ? cartItems: []));\n}\n\nexport const sumItems = (cartItems: any) => {\n    Storage(cartItems);\n    let itemCount = cartItems.reduce((total:any, product:any) => total + product.quantity, 0);\n    let total = cartItems.reduce((total:any, product:any) => total + product.price * product.quantity, 0).toFixed(2);\n    return { itemCount, total }\n}\n\nexport const CartReducer = (state: any, action: any) => {\n    switch (action.type) {\n        case \"INCREASE\":\n            state.cartItems[state.cartItems.findIndex((item: any) => item.name === action.payload.name)].quantity++\n            return {\n                ...state,\n                ...sumItems(state.cartItems),\n                cartItems: [...state.cartItems]\n            }\n        default:\n            break;\n    }\n}"]},"metadata":{},"sourceType":"module"}