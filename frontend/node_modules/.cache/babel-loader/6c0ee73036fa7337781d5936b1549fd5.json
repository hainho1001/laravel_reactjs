{"ast":null,"code":"const Storage = cartItems => {\n  localStorage.setItem('cart', JSON.stringify(cartItems.length > 0 ? cartItems : []));\n};\n\n_c = Storage;\nexport const sumItems = cartItems => {\n  Storage(cartItems);\n  return [];\n};\nexport const CartReducer = (state, action) => {\n  switch (action.type) {\n    case \"INCREASE\":\n      state.cartItems[state.cartItems.findIndex(item => item.name === action.payload.name)].quantity++;\n      return { ...state,\n        ...sumItems(state.cartItems),\n        cartItems: [...state.cartItems]\n      };\n\n    default:\n      break;\n  }\n};\n_c2 = CartReducer;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Storage\");\n$RefreshReg$(_c2, \"CartReducer\");","map":{"version":3,"sources":["/home/vohai/Templates/self-tranning/self-training-cart/src/contexts/CartReducer.ts"],"names":["Storage","cartItems","localStorage","setItem","JSON","stringify","length","sumItems","CartReducer","state","action","type","findIndex","item","name","payload","quantity"],"mappings":"AAGA,MAAMA,OAAO,GAAIC,SAAD,IAAoB;AAChCC,EAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAeJ,SAAS,CAACK,MAAV,GAAmB,CAAnB,GAAuBL,SAAvB,GAAkC,EAAjD,CAA7B;AACH,CAFD;;KAAMD,O;AAIN,OAAO,MAAMO,QAAQ,GAAIN,SAAD,IAAoB;AACxCD,EAAAA,OAAO,CAACC,SAAD,CAAP;AACA,SAAO,EAAP;AACH,CAHM;AAKP,OAAO,MAAMO,WAAW,GAAG,CAACC,KAAD,EAAaC,MAAb,KAA6B;AACpD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,UAAL;AACIF,MAAAA,KAAK,CAACR,SAAN,CAAgBQ,KAAK,CAACR,SAAN,CAAgBW,SAAhB,CAA2BC,IAAD,IAAeA,IAAI,CAACC,IAAL,KAAcJ,MAAM,CAACK,OAAP,CAAeD,IAAtE,CAAhB,EAA6FE,QAA7F;AACA,aAAO,EACH,GAAGP,KADA;AAEH,WAAGF,QAAQ,CAACE,KAAK,CAACR,SAAP,CAFR;AAGHA,QAAAA,SAAS,EAAE,CAAC,GAAGQ,KAAK,CAACR,SAAV;AAHR,OAAP;;AAKJ;AACI;AATR;AAWH,CAZM;MAAMO,W","sourcesContent":["\n\n\nconst Storage = (cartItems: any) => {\n    localStorage.setItem('cart', JSON.stringify(cartItems.length > 0 ? cartItems: []));\n}\n\nexport const sumItems = (cartItems: any) => {\n    Storage(cartItems);\n    return [];\n}\n\nexport const CartReducer = (state: any, action: any) => {\n    switch (action.type) {\n        case \"INCREASE\":\n            state.cartItems[state.cartItems.findIndex((item: any) => item.name === action.payload.name)].quantity++\n            return {\n                ...state,\n                ...sumItems(state.cartItems),\n                cartItems: [...state.cartItems]\n            }\n        default:\n            break;\n    }\n}"]},"metadata":{},"sourceType":"module"}