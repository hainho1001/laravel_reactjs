{"ast":null,"code":"var _jsxFileName = \"/home/vohai/Templates/self-tranning/self-training-cart/src/contexts/CartContext.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useReducer } from 'react';\nimport { CartReducer } from './CartReducer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CartContext = /*#__PURE__*/createContext(Object());\nexport function CartContextProvider({\n  children\n}) {\n  _s();\n\n  let storage = [];\n  let getData = localStorage.getItem(\"cart\");\n  storage = getData ? JSON.parse(getData) : [];\n  const initialState = {\n    cartItems: storage,\n    checkout: false\n  };\n  const [state, dispatch] = useReducer(CartReducer, initialState);\n\n  const addCart = payload => {\n    dispatch({\n      type: 'ADD_CART',\n      payload\n    });\n  };\n\n  const increase = payload => {\n    dispatch({\n      type: 'INCREASE',\n      payload\n    });\n  };\n\n  const decrease = payload => {\n    dispatch({\n      type: 'DECREASE',\n      payload\n    });\n  };\n\n  const removeItem = payload => {\n    dispatch({\n      type: 'REMOVE_ITEM',\n      payload\n    });\n  };\n\n  const valueContext = {\n    addCart,\n    increase,\n    decrease,\n    removeItem,\n    ...state\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: valueContext,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CartContextProvider, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = CartContextProvider;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartContextProvider\");","map":{"version":3,"sources":["/home/vohai/Templates/self-tranning/self-training-cart/src/contexts/CartContext.tsx"],"names":["React","createContext","useReducer","CartReducer","CartContext","Object","CartContextProvider","children","storage","getData","localStorage","getItem","JSON","parse","initialState","cartItems","checkout","state","dispatch","addCart","payload","type","increase","decrease","removeItem","valueContext"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,QAAiD,OAAjD;AACA,SAASC,WAAT,QAA4B,eAA5B;;AAEA,OAAO,MAAMC,WAAW,gBAAGH,aAAa,CAACI,MAAM,EAAP,CAAjC;AAEP,OAAO,SAASC,mBAAT,CAA6B;AAACC,EAAAA;AAAD,CAA7B,EAA8C;AAAA;;AACnD,MAAIC,OAAY,GAAG,EAAnB;AACA,MAAIC,OAAO,GAAGC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAd;AACAH,EAAAA,OAAO,GAAGC,OAAO,GAAGG,IAAI,CAACC,KAAL,CAAWJ,OAAX,CAAH,GAAyB,EAA1C;AAEA,QAAMK,YAAY,GAAG;AAAEC,IAAAA,SAAS,EAAEP,OAAb;AAAsBQ,IAAAA,QAAQ,EAAE;AAAhC,GAArB;AAEA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBhB,UAAU,CAACC,WAAD,EAAcW,YAAd,CAApC;;AAEA,QAAMK,OAAO,GAAIC,OAAD,IAAkB;AAChCF,IAAAA,QAAQ,CAAC;AAACG,MAAAA,IAAI,EAAE,UAAP;AAAmBD,MAAAA;AAAnB,KAAD,CAAR;AACD,GAFD;;AAIA,QAAME,QAAQ,GAAIF,OAAD,IAAkB;AACjCF,IAAAA,QAAQ,CAAC;AAACG,MAAAA,IAAI,EAAE,UAAP;AAAmBD,MAAAA;AAAnB,KAAD,CAAR;AACD,GAFD;;AAIA,QAAMG,QAAQ,GAAIH,OAAD,IAAkB;AACjCF,IAAAA,QAAQ,CAAC;AAACG,MAAAA,IAAI,EAAE,UAAP;AAAmBD,MAAAA;AAAnB,KAAD,CAAR;AACD,GAFD;;AAIA,QAAMI,UAAU,GAAIJ,OAAD,IAAkB;AACnCF,IAAAA,QAAQ,CAAC;AAACG,MAAAA,IAAI,EAAE,aAAP;AAAsBD,MAAAA;AAAtB,KAAD,CAAR;AACD,GAFD;;AAIA,QAAMK,YAAY,GAAG;AACnBN,IAAAA,OADmB;AAEnBG,IAAAA,QAFmB;AAGnBC,IAAAA,QAHmB;AAInBC,IAAAA,UAJmB;AAKnB,OAAGP;AALgB,GAArB;AAQA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEQ,YAA7B;AAAA,cACMlB;AADN;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GAtCeD,mB;;KAAAA,mB;AAsCf","sourcesContent":["import React, { createContext, useReducer } from 'react';\nimport { CartReducer } from './CartReducer';\n\nexport const CartContext = createContext(Object ());\n\nexport function CartContextProvider({children}: any) {\n  let storage: any = [];\n  let getData = localStorage.getItem(\"cart\");\n  storage = getData ? JSON.parse(getData) : [];\n\n  const initialState = { cartItems: storage, checkout: false };\n\n  const [state, dispatch] = useReducer(CartReducer, initialState);\n\n  const addCart = (payload: any) => {\n    dispatch({type: 'ADD_CART', payload});\n  }\n\n  const increase = (payload: any) => {\n    dispatch({type: 'INCREASE', payload});\n  }\n\n  const decrease = (payload: any) => {\n    dispatch({type: 'DECREASE', payload});\n  }\n  \n  const removeItem = (payload: any) => {\n    dispatch({type: 'REMOVE_ITEM', payload});\n  }\n\n  const valueContext = {\n    addCart,\n    increase,\n    decrease,\n    removeItem,\n    ...state\n  }\n\n  return ( \n    <CartContext.Provider value={valueContext} >\n        { children }\n    </CartContext.Provider>\n );\n};"]},"metadata":{},"sourceType":"module"}